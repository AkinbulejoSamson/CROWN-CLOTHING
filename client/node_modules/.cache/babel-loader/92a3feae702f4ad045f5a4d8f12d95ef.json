{"ast":null,"code":"import { all, call, takeLatest, put, select } from 'redux-saga/effects';\nimport UserActionTypes from '../user/user.types';\nimport CartActionTypes from './cart.types';\nimport { selectCurrentUser } from '../user/user.selectors';\nimport { selectCartItems } from './cart.selectors';\nimport { clearCart, setCartFromFirebase } from './cart.actions';\nimport { getUserCartRef } from '../../firebase/firebase.utils';\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\nexport function* updateCartInFirebase() {\n  const currentUser = yield select(selectCurrentUser);\n\n  if (currentUser) {\n    try {\n      const cartRef = yield getUserCartRef(currenUser.id);\n      const cartItems = yield select(selectCartItems);\n      yield cartRef.update({\n        cartItems\n      });\n    } catch (error) {\n      console.log(erro);\n    }\n  }\n}\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess)]);\n}","map":{"version":3,"sources":["C:/Users/Akinbulejo Samson/crown/client/src/redux/cart/cart.sagas.js"],"names":["all","call","takeLatest","put","select","UserActionTypes","CartActionTypes","selectCurrentUser","selectCartItems","clearCart","setCartFromFirebase","getUserCartRef","clearCartOnSignOut","updateCartInFirebase","currentUser","cartRef","currenUser","id","cartItems","update","error","console","log","erro","onSignOutSuccess","SIGN_OUT_SUCCESS","cartSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,GAAhC,EAAqCC,MAArC,QAAmD,oBAAnD;AAEA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,SAAT,EAAoBC,mBAApB,QAA+C,gBAA/C;AAEA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,OAAO,UAAUC,kBAAV,GAA+B;AACpC,QAAMT,GAAG,CAACM,SAAS,EAAV,CAAT;AACD;AAED,OAAO,UAAUI,oBAAV,GAAiC;AACtC,QAAMC,WAAW,GAAG,MAAMV,MAAM,CAACG,iBAAD,CAAhC;;AACA,MAAIO,WAAJ,EAAiB;AACf,QAAI;AACF,YAAMC,OAAO,GAAG,MAAMJ,cAAc,CAACK,UAAU,CAACC,EAAZ,CAApC;AACA,YAAMC,SAAS,GAAG,MAAMd,MAAM,CAACI,eAAD,CAA9B;AACA,YAAMO,OAAO,CAACI,MAAR,CAAe;AAACD,QAAAA;AAAD,OAAf,CAAN;AACD,KAJD,CAIE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD;AACF;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,QAAMtB,UAAU,CAACG,eAAe,CAACoB,gBAAjB,EAAmCb,kBAAnC,CAAhB;AACD;AAMD,OAAO,UAAUc,SAAV,GAAsB;AAC3B,QAAO1B,GAAG,CAAC,CAACC,IAAI,CAACuB,gBAAD,CAAL,CAAD,CAAV;AACD","sourcesContent":["import { all, call, takeLatest, put, select } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from '../user/user.types';\r\nimport CartActionTypes from './cart.types';\r\nimport { selectCurrentUser } from '../user/user.selectors';\r\nimport { selectCartItems } from './cart.selectors';\r\nimport { clearCart, setCartFromFirebase } from './cart.actions';\r\n\r\nimport { getUserCartRef } from '../../firebase/firebase.utils';\r\n\r\nexport function* clearCartOnSignOut() {\r\n  yield put(clearCart());\r\n}\r\n\r\nexport function* updateCartInFirebase() {\r\n  const currentUser = yield select(selectCurrentUser);\r\n  if (currentUser) {\r\n    try {\r\n      const cartRef = yield getUserCartRef(currenUser.id);\r\n      const cartItems = yield select(selectCartItems);\r\n      yield cartRef.update({cartItems})\r\n    } catch (error) {\r\n      console.log(erro)\r\n    }\r\n  }\r\n}\r\n\r\nexport function* onSignOutSuccess() {\r\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function* cartSagas() {\r\n  yield (all([call(onSignOutSuccess)]))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}