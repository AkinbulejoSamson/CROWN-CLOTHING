{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akinbulejo Samson\\\\crown\\\\client\\\\src\\\\components\\\\error-boundary\\\\error-boundary.component.jsx\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hasErrored: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    //process the error\n    return {\n      hasErrored: true\n    };\n  }\n\n  componentDidCatch(error, info) {\n    console.log(error);\n  }\n\n  render() {\n    if (this.state.hasErrored) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Something went wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["C:/Users/Akinbulejo Samson/crown/client/src/components/error-boundary/error-boundary.component.jsx"],"names":["React","Component","ErrorBoundary","constructor","state","hasErrored","getDerivedStateFromError","error","componentDidCatch","info","console","log","render","props","children"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACpCE,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAE8B,SAAxBC,wBAAwB,CAACC,KAAD,EAAQ;AACrC;AACA,WAAO;AAAEF,MAAAA,UAAU,EAAE;AAAd,KAAP;AACD;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,IAAR,EAAc;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKR,KAAL,CAAWC,UAAf,EAA2B;AACzB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,WAAO,KAAKQ,KAAL,CAAWC,QAAlB;AACD;;AAxBmC;;AA2BtC,eAAeZ,aAAf","sourcesContent":["\r\nimport React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      hasErrored: false\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    //process the error\r\n    return { hasErrored: true };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    console.log(error)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasErrored) {\r\n      return <div>Something went wrong</div>\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;"]},"metadata":{},"sourceType":"module"}