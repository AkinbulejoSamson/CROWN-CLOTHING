{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('Im fired');\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n    this.setState({\n      loading: false\n    });\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Akinbulejo Samson/crown/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionsMap","setState","loading","catch","error","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AAEE,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AAEAH,EAAAA,aAAa,CACVI,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACAJ,IAAAA,QAAQ,CAACR,uBAAuB,CAACa,cAAD,CAAxB,CAAR;AACA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACD,GANH,EAOGC,KAPH,CAOSC,KAAK,IAAIT,QAAQ,CAACP,uBAAuB,CAACgB,KAAK,CAACC,OAAP,CAAxB,CAP1B;AAQH;AAED,OAAO,UAAUT,qBAAV,GAAkC;AACvC,QAAMZ,SAAS,CAACK,eAAe,CAACiB,uBAAjB,EAA0ChB,qBAA1C,CAAf;AACD","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types'\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log('Im fired');\r\n\r\n    const collectionRef = firestore.collection('collections');\r\n    dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef\r\n      .get()\r\n      .then(snapshot => {\r\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        this.setState({ loading: false });\r\n      })\r\n      .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\r\n}"]},"metadata":{},"sourceType":"module"}