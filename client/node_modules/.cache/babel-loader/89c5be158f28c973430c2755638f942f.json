{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('Im fired');\n  const collectionRef = firestore.collection('collections'); // collectionRef\n  //   .get()\n  //   .then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //     this.setState({ loading: false });\n  //   })\n  //   .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Akinbulejo Samson/crown/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA6B,oBAA7B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AAEE,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB,CAHqC,CAKrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMX,SAAS,CAACK,eAAe,CAACO,uBAAjB,EAA0CN,qBAA1C,CAAf;AACD","sourcesContent":["import { takeEvery,   } from 'redux-saga/effects';\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types'\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log('Im fired');\r\n\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n    // collectionRef\r\n    //   .get()\r\n    //   .then(snapshot => {\r\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //     dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    //     this.setState({ loading: false });\r\n    //   })\r\n    //   .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\r\n}"]},"metadata":{},"sourceType":"module"}