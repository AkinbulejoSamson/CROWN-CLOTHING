{"ast":null,"code":"import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDUiIez4VKz4_uXfUkLRhAAyKz-wwZE_qo\",\n  authDomain: \"crown-db-7fcad.firebaseapp.com\",\n  projectId: \"crown-db-7fcad\",\n  storageBucket: \"crown-db-7fcad.appspot.com\",\n  messagingSenderId: \"945458824650\",\n  appId: \"1:945458824650:web:492a324a564c43d0aafb33\",\n  measurementId: \"G-8RCP9H5VSH\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const getUserCartRef = userId => {\n  const cartRef = firestore.collection('carts').where(user);\n};\nexport const addCollectionandDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  console.log(objectsToAdd);\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Akinbulejo Samson/crown/client/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","getUserCartRef","userId","cartRef","collection","where","user","addCollectionandDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","initializeApp","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/auth\";\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyDUiIez4VKz4_uXfUkLRhAAyKz-wwZE_qo\",\r\n\tauthDomain: \"crown-db-7fcad.firebaseapp.com\",\r\n\tprojectId: \"crown-db-7fcad\",\r\n\tstorageBucket: \"crown-db-7fcad.appspot.com\",\r\n\tmessagingSenderId: \"945458824650\",\r\n\tappId: \"1:945458824650:web:492a324a564c43d0aafb33\",\r\n\tmeasurementId: \"G-8RCP9H5VSH\",\r\n};\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n\tif (!userAuth) return;\r\n\r\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n\tconst snapShot = await userRef.get();\r\n\r\n\tif (!snapShot.exists) {\r\n\t\tconst { displayName, email } = userAuth;\r\n\t\tconst createdAt = new Date();\r\n\r\n\t\ttry {\r\n\t\t\tawait userRef.set({\r\n\t\t\t\tdisplayName,\r\n\t\t\t\temail,\r\n\t\t\t\tcreatedAt,\r\n\t\t\t\t...additionalData,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(\"error creating user\", error.message);\r\n\t\t}\r\n\t}\r\n\r\n\treturn userRef;\r\n};\r\n\r\nexport const getUserCartRef = userId => {\r\n\tconst cartRef = firestore.collection('carts').where(user)\r\n}\r\n\r\nexport const addCollectionandDocuments = async (\r\n\tcollectionKey,\r\n\tobjectsToAdd\r\n) => {\r\n\tconst collectionRef = firestore.collection(collectionKey);\r\n\tconsole.log(collectionRef);\r\n\r\n\tconst batch = firestore.batch();\r\n\tobjectsToAdd.forEach((obj) => {\r\n\t\tconst newDocRef = collectionRef.doc();\r\n\t\tbatch.set(newDocRef, obj);\r\n\t});\r\n\tconsole.log(objectsToAdd);\r\n\r\n\treturn await batch.commit();\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n\tconst transformedCollection = collections.docs.map((doc) => {\r\n\t\tconst { title, items } = doc.data();\r\n\r\n\t\treturn {\r\n\t\t\trouteName: encodeURI(title.toLowerCase()),\r\n\t\t\tid: doc.id,\r\n\t\t\ttitle,\r\n\t\t\titems,\r\n\t\t};\r\n\t});\r\n\r\n\treturn transformedCollection.reduce((accumulator, collection) => {\r\n\t\taccumulator[collection.title.toLowerCase()] = collection;\r\n\t\treturn accumulator;\r\n\t}, {});\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n\t\t\tunsubscribe();\r\n\t\t\tresolve(userAuth);\r\n\t\t}, reject);\r\n\t});\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}